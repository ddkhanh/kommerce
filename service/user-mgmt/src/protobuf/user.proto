// After chaing this file, your have trigger code generation for this by issuing
// yarn gen
syntax = "proto3";

package usermgmt;

service UserService {
  rpc findUserById (ObjectId) returns (UserResponse) {}    
  rpc updateUser (UserResponse) returns (UserResponse) {}
  rpc searchUsers (SearchRequest) returns (UserListResponse) {}
  rpc addUserToOrg (UserOrgRequest) returns (UserResponse) {}
  rpc signUp (UserRequest) returns (UserResponse) {}  
  /* Perform native login using user storing in Database by given user and password */
  rpc signIn (LoginRequest) returns (UserResponse) {}
}


service OrganizationService {
  rpc findOrgById (ObjectId) returns (OrganizationResponse) {}    
  rpc createOrg (OrganizationRequest) returns (OrganizationResponse) {}  
  rpc updateOrg (OrganizationResponse) returns (OrganizationResponse) {}
  rpc searchOrgs (SearchRequest) returns (OrganizatioListResponse) {}  
  rpc setUpperOrg (UpperOrgRequest) returns (OrganizationResponse) {}
}


message ObjectId {
  string id = 1;
}

message OrganizationResponse {
  string id=1;
  string name=2;
  string description=3;
  string uperOrgId=4;
  int64 createdAt=5;
  int64 updatedAt=6;
}

message OrganizationRequest {
  string name=1;
  string description=2;
  string uperOrgId=3;
}

message OrganizatioListResponse {
  repeated OrganizationResponse orgs = 1;
  int32 total = 2;
}

message UpperOrgRequest {
  string orgId = 1;
  string upperOrgId = 2;
}

message UserOrgRequest {
  string orgId = 1;
  string userId = 2;
}

message SearchCriteria {
  string name=1;
  string value = 2;
  CriteriaMethod md = 3;
}

enum CriteriaMethod {
  eq = 0; //equals
  gt = 1; //greater than
  lt = 2; //less than
  ne = 3; //not equals
  in = 4; //in
  sw = 5; //starts with
  ew = 6; //ends with
  ct = 7; //contains
  regex = 8; // reqgular expression
}

message SearchRequest {
  repeated SearchCriteria criterias=1;
  bool or = 2;
  int32 page = 3;
  int32 limit = 4;
}

/* LoginRequest to perform a native login using user storing in DB
 * password must be in plaintext. */
message LoginRequest {  
  string userName = 1; // userName for searching in DB and must not be null
  string password = 2; // password in plaintext format
}

message UserListResponse {
  repeated UserResponse users = 1;
  int32 total = 2;
}

message UserResponse {
  string id = 1;
  string userName = 2;
  string password = 3;
  string orgId = 4;
  UserProfile profile=5;
  repeated UserAddress addresses=6;
  int64 createdAt=7;
  int64 updatedAt=8;
}

message UserRequest {
  string userName = 1;
  string password = 2;
  string orgId = 3;
  UserProfile profile=4;
  repeated UserAddress addresses=5;
}

message UserAddress {
  string street=1;
  string ward=2;
  string district=3;
  string city=4;
  string state=5;
  string country=6;
}

message UserProfile {
  string firstName=1;
  string lastName=2;
  string phone=3;
  string gender=4;
  string photo=5;
  int64 dateOfBirth=6;
}

message OperatorRequest {
  UserRequest user=1;
  repeated string orgsManagement=2;
}